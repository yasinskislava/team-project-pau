{"mappings":"aA+BiB,WACb,MAAMA,EAAUC,SAASC,cAAc,mBACjCC,EAAOF,SAASC,cAAc,SACpCF,EAAQI,iBAAiB,SAASC,IA1BtC,IAAkBC,EARDC,EAmCXF,EAAEG,iBACFP,SAASC,cAAc,UAAUO,MAAMH,MAAQ,GA5BnCA,EA6BVL,SAASC,cAAc,UAAUO,MAAMH,MA5B3CI,QAAQC,IAAIL,GACC,gBAATA,EACO,QAEE,SAATA,EACO,QAEO,SAATA,EACE,aADN,IAuBHH,EAAKM,MAAMG,UAAY,cAvCZL,EAwCTJ,EAAKM,MAAMG,UAAUC,OAAM,GAAI,GAvCxB,GAAPN,EACO,KAEK,KAAPA,EACE,aADN,KAsCHP,EAAQc,UAAUC,OAAO,UACzBf,EAAQc,UAAUC,OAAO,SACzBf,EAAQgB,UAAY,GAxB1B,SAAaC,GACT,MAAMC,EAAQD,EAAME,MAAM,KACpBC,EAASF,EAAM,GAAGC,MAAM,KAC9B,MAAiB,UAAbC,EAAO,GACA,GAAGF,EAAM,YAAYE,EAAO,KAG5B,GAAGF,EAAM,aAAaE,EAAO,IAE5C,CAe6BC,CAAIrB,EAAQgB,YAAY,GAEnD,CC7CF,GACA,MAAMM,EAAarB,SAASC,cAAc,0BACpCqB,EAAS,GACTC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,QAGvCC,GAFW5B,SAASC,cAAc,yBACzBD,SAASC,cAAc,cACxBD,SAASC,cAAc,sBAErC,GAAoB,IAAhBsB,EAAKM,OAAc,CACrBD,EAAMpB,MAAMsB,QAAU,OACtB,MAAMC,EAAa/B,SAASgC,cAAc,OAC1CD,EAAWE,UAAY,uBACvBF,EAAWhB,UAAY,4XAQvBM,EAAWa,YAAYH,EACzB,KAAO,CACL,IAAK,IAAII,KAAKZ,EAAM,CAClBD,EAAOc,KAAKD,GACZ,MAAME,EAAMrC,SACTC,cAAc,mBACdqC,KAAKC,QAAQrB,MAAM,KACtBG,EAAWmB,mBACT,YACA,+JAIUH,EAAI,wGAGqBA,EAAI,gCACrCF,EAAEM,KAAK,GAAGC,cAAgBP,EAAEM,KAAK7B,MAAM,qEAGPuB,EAAEQ,kEAE1BR,EAAES,SAAS,GAAGF,cAAgBP,EAAES,SAAShC,MAAM,6CAG/CuB,EAAEU,OAAO,GAAGH,cAAgBP,EAAEU,OAAOjC,MAAM,yDAMzD,CACAkC,YAAW,KACT,MAAMC,EAAO/C,SAASgD,iBAAiB,aACvCvC,QAAQC,IAAIqC,GACZ,IAAK,IAAIZ,EAAI,EAAGA,EAAIY,EAAKlB,OAAQM,IAC/BY,EAAKZ,GAAG3B,MAAMyC,gBAAkB,OAChCF,EAAKZ,GAAG3B,MAAM0C,YAAc,OAC5BH,EAAKZ,GAAGhC,iBAAiB,SAASgD,IAChCA,EAAM5C,iBACN,MAAM6C,EAAW5B,KAAKC,MAAMC,aAAaC,QAAQ,QACjDlB,QAAQC,IAAI0C,GACZA,EAASC,OAAOlB,EAAG,GACnB1B,QAAQC,IAAI0C,GACZ1B,aAAa4B,QAAQ,MAAO9B,KAAK+B,UAAUH,IAC3CL,EAAKZ,GAAGqB,QAAQ,mBAAmBC,QAAM,GAG7C,GACC,IACL,C","sources":["src/js/header.js","src/js/fav.js"],"sourcesContent":["function scaling(num) {\r\n    if (num == 1) {\r\n        return \"0%\";\r\n    }\r\n    else if (num == \"(\") {\r\n        return \"-110%\";\r\n    }\r\n}\r\nfunction coloring(color) {\r\n    console.log(color);\r\n    if (color == \"rgb(0, 0, 0)\") {\r\n        return \"white\";\r\n    }\r\n    if (color == \"white\") {\r\n        return \"black\";\r\n    }\r\n    else if (color == \"black\") {\r\n        return \"white\";\r\n    }\r\n}\r\nfunction svg(value) {\r\n    const parts = value.split(\"#\");\r\n    const parts1 = parts[1].split('\"');\r\n    if (parts1[0] == \"burger\") {\r\n        return `${parts[0]}#cross\"${parts1[1]}`;\r\n    }\r\n    else {\r\n        return `${parts[0]}#burger\"${parts1[1]}`;\r\n    }\r\n}\r\n\r\n  export default function headerFunc() {\r\n    const trigger = document.querySelector('header > button');\r\n    const menu = document.querySelector('.menu');\r\n    trigger.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      document.querySelector('.title').style.color = `${coloring(\r\n        document.querySelector('.title').style.color\r\n      )}`;\r\n      menu.style.transform = `translateY(${scaling(\r\n        menu.style.transform.slice(-4, -3)\r\n      )})`;\r\n      trigger.classList.toggle('burger');\r\n      trigger.classList.toggle('cross');\r\n      trigger.innerHTML = `${svg(trigger.innerHTML)}`;\r\n    });\r\n  }\r\n\r\n","import headerFunc from './header';\r\nheaderFunc();\r\nconst categories = document.querySelector('.favorites .categories');\r\nconst favArr = [];\r\nconst info = JSON.parse(localStorage.getItem('arr'));\r\nconst notFound = document.querySelector('.favorites__no-add-ex');\r\nconst secFav = document.querySelector(`.favorites`);\r\nconst title = document.querySelector('.favorites__title');\r\n\r\nif (info.length === 0) {\r\n  title.style.display = 'none';\r\n  const noFoundFav = document.createElement('div');\r\n  noFoundFav.className = 'favorites__no-add-ex';\r\n  noFoundFav.innerHTML = `\r\n        <h2 class=\"favorites__no-add-title\">Favorites</h2>\r\n        <div class=\"favorites__no-add-img\"></div>\r\n        <p class=\"favorites__no-add-text\">\r\n          It appears that you haven't added any exercises to your favorites yet. To\r\n          get started, you can add exercises that you like to your favorites for\r\n          easier access in the future.\r\n        </p>`;\r\n  categories.appendChild(noFoundFav);\r\n} else {\r\n  for (let i of info) {\r\n    favArr.push(i);\r\n    const svg = document\r\n      .querySelector('.burger svg use')\r\n      .href.baseVal.split('#');\r\n    categories.insertAdjacentHTML(\r\n      'beforeend',\r\n      `<div class=\"exercises-card\">\r\n              <div class=\"top\">\r\n              <h3>WORKOUT</h3>\r\n              <span><button class=\"card-btn\"><svg><use href=\"${\r\n                svg[0]\r\n              }#trash\"></use></svg></button></span>\r\n              </div>\r\n              <p><span><svg><use href=\"${svg[0]}#human\"></use></svg></span>${\r\n        i.name[0].toUpperCase() + i.name.slice(1)\r\n      }</p>\r\n              <ul>\r\n              <li>Burned calories: <b>${i.burnedCalories}/3 min</b></li>\r\n              <li>Body part: <b>${\r\n                i.bodyPart[0].toUpperCase() + i.bodyPart.slice(1)\r\n              }</b></li>\r\n              <li>Target: <b>${\r\n                i.target[0].toUpperCase() + i.target.slice(1)\r\n              }</b></li>\r\n              </ul>\r\n              </div>`\r\n\r\n    );\r\n  }\r\n  setTimeout(() => {\r\n    const bins = document.querySelectorAll('.card-btn');\r\n    console.log(bins);\r\n    for (let i = 0; i < bins.length; i++) {\r\n      bins[i].style.backgroundColor = '#fff';\r\n      bins[i].style.borderStyle = 'none';\r\n      bins[i].addEventListener('click', event => {\r\n        event.preventDefault();\r\n        const favorArr = JSON.parse(localStorage.getItem('arr'));\r\n        console.log(favorArr);\r\n        favorArr.splice(i, 1);\r\n        console.log(favorArr);\r\n        localStorage.setItem('arr', JSON.stringify(favorArr));\r\n        bins[i].closest('.exercises-card').remove();\r\n      });\r\n\r\n    }\r\n  }, 200);\r\n}\r\n"],"names":["trigger","document","querySelector","menu","addEventListener","e","color","num","preventDefault","style","console","log","transform","slice","classList","toggle","innerHTML","value","parts","split","parts1","$d35165bd5db5382a$var$svg","$9e92b932576c9d59$var$categories","$9e92b932576c9d59$var$favArr","$9e92b932576c9d59$var$info","JSON","parse","localStorage","getItem","$9e92b932576c9d59$var$title","length","display","noFoundFav","createElement","className","appendChild","i","push","svg","href","baseVal","insertAdjacentHTML","name","toUpperCase","burnedCalories","bodyPart","target","setTimeout","bins","querySelectorAll","backgroundColor","borderStyle","event","favorArr","splice","setItem","stringify","closest","remove"],"version":3,"file":"favorites.11f3d9a1.js.map"}